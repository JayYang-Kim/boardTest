<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <context:component-scan base-package="com.sp"/>
    
	<http auto-config="true" use-expressions="true">
	        <csrf disabled="true"/>
			
			<!-- 페이지 접근권한 설정 -->
			<intercept-url pattern="/member/login" access="permitAll"/>
			<intercept-url pattern="/member/login_check" access="permitAll"/>
			<intercept-url pattern="/resources/**" access="permitAll"/>
			
			<intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
			
	        <!--  사용자 정의 로그인 폼  -->
	        <form-login login-page="/member/login"
	             login-processing-url="/member/login_check"
	             username-parameter="id"
	             password-parameter="pwd"
	             default-target-url="/"
	             always-use-default-target="false"
	             authentication-success-handler-ref="loginSuccessHandler"
	             authentication-failure-url="/member/login?login_error"/>
	        
	        <logout logout-url="/member/logout"
	                     invalidate-session="true"
	                     logout-success-url="/member/login"/>
	        
	        <!-- 접근 권한이 없는 경우 -->
	        <access-denied-handler error-page="/member/noAuthorized"/>
	        
	         <!-- 동일 아이디로 동시에 1명만 접속(기존 세션 만료) -->
			<session-management>
				<concurrency-control max-sessions="1" expired-url="/member/expired"/>
			</session-management>
			
			<!-- AJAX 로그인 여부 확인 필터 -->
			<custom-filter ref="ajaxFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
	</http>

    <beans:bean id="loginSuccessHandler" class="com.sp.security.LoginSuccessHandler"/>

    <jdbc-user-service 
    	data-source-ref="dataSource"
        id="userService"
        users-by-username-query="SELECT id as username, pwd as password, enabled FROM tb_user WHERE id = ?"
        authorities-by-username-query="SELECT id as username, authority FROM tb_user tu JOIN identifierCode ic ON tu.identCode = ic.identCode WHERE id = ?"/>
    
    <!--  bcrypt : 패스워드 암호화에 특화된 password hashing function -->
	<!-- <authentication-manager>
		<authentication-provider user-service-ref="userService">
		      <password-encoder ref="bcryptEncoder"/>
		</authentication-provider>
	</authentication-manager> -->
	
	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<beans:bean id="ajaxFilter" class="com.sp.security.AjaxFilter">
		<beans:property name="ajaxHeader" value="AJAX"/>
	</beans:bean>

</beans:beans>
